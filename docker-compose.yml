services:
  postgres:
    image: postgres:16
    container_name: msa_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin_pass}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      TZ: Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/initdb:/docker-entrypoint-initdb.d:ro
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
#      interval: 5s
#      timeout: 3s
#      retries: 10

#  auth-service:
#    image: listik/auth-service:latest
#    container_name: auth-service
#    ports:
#      - "8081:8081"
#    environment:
#      USER_SERVICE_URL: http://user-service:8082
#      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key-must-be-at-least-32-characters-long}
#      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
#      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-your-google-client-id}
#      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-your-google-client-secret}
#      APPLE_CLIENT_ID: ${APPLE_CLIENT_ID:-your-apple-client-id}
#    depends_on:
#      - user-service
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#
#  user-service:
#    image: listik/user-service:latest
#    container_name: user-service
#    ports:
#      - "8082:8082"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-appdb}
#      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-app_admin}
#      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-admin_pass}
#    depends_on:
#      postgres:
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#
#  book-service:
#    image: listik/book-service:latest
#    container_name: book-service
#    ports:
#      - "8083:8083"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-appdb}
#      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-app_admin}
#      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-admin_pass}
#    depends_on:
#      postgres:
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#
#  gateway-service:
#    image: listik/gateway-service:latest
#    container_name: gateway-service
#    ports:
#      - "8080:8080"
#    depends_on:
#      - auth-service
#      - user-service
#      - book-service
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3

volumes:
  postgres_data:
