spring:
  application:
    name: gateway-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}


  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: ${AUTH_SERVICE_URL}
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - StripPrefix=2

        - id: user-service
          uri: ${USER_SERVICE_URL}
          predicates:
            - Path=/api/v1/users/**
          filters:
            - StripPrefix=2

        - id: book-service
          uri: ${BOOK_SERVICE_URL}
          predicates:
            - Path=/api/v1/books/**
          filters:
            - StripPrefix=2

      default-filters:
        - RemoveRequestHeader=Cookie
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

  main:
    web-application-type: reactive

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET}

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway
  endpoint:
    health:
      show-details: when-authorized
    gateway:
      enabled: true

logging:
  level:
    com.listik.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      default:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 30s
        permittedNumberOfCallsInHalfOpenState: 3